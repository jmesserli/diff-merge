buildscript {
    ext.kotlin_version = '1.1.51'
    ext.junitPlatformVersion = '1.0.1'
    ext.junitJupiterVersion = '5.0.1'

    repositories {
        maven { url 'https://pkg.pegnu.cloud/repository/m2' }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

group 'nu.peg.tools'
version '0.1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'

configurations { deployerJars }
artifacts {
    archives jar
}
uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: 'https://pkg.pegnu.cloud/repository/pegnu-snapshot') {
                authentication(userName: 'todo', password: 'todo')
            }
        }
    }
}

repositories {
    maven { url 'https://pkg.pegnu.cloud/repository/m2' }
    mavenCentral()
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-http:2.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")

    testCompile "com.willowtreeapps.assertk:assertk:0.9"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}